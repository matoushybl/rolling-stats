initSidebarItems({"mod":[["convertf32","Integer types in Rust do not allow for converting them into f32 using the `From/Into` traits as these conversions are lossy."],["partial_data_buffer","PartialDataBuffer represents a way of dealing with incomplete raw data. It consumes a slice of the newly received data, saves the data that are required for completing a previously incomplete data, parses them and returns a new slice, that contains valid data for further processing. Trailing incomplete data are handled as well. The new returned slice has appropriate size so that an integer number of values can be parsed using it."],["raw","Abstraction of conversion of raw bytes into specific types."],["reconstructor","Reconstructor serves as a raw data stream parser that deals with interrupted/incomplete data. That means raw data streams which do not contain whole multiplies of the Type length."]],"struct":[["BigEndian","The BigEndian struct represents raw bytes conversion technique based on the Little Endian memory layout."],["LittleEndian","The LittleEndian struct represents raw bytes conversion technique based on the Little Endian memory layout."],["RollingStats","Rolling stats is an implementation of a rolling buffer specified by a fixed size window, providing significant statistical values."]],"trait":[["ConverterFromRaw","Trait utilized for implementing conversion of raw bytes into specific types. Implemented by Converter structs such as the `LittleEndian` and `BigEndian` structs. `T` denotes the type the raw bytes should be converted into."],["Statistics","The `Statistics` trait useful for dependency injection. This trait abstracts away basic statistics measures."]]});